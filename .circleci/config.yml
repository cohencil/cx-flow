version: 2
jobs:
  build:
    context: tal_tests_Context
    working_directory: ~/repo
    docker:
      - image: "circleci/openjdk:8-jdk"
    steps:
      - checkout
      - restore_cache:
          key: "v1-gradle-wrapper-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}"
      - restore_cache:
          key: "v1-gradle-cache-{{ checksum \"build.gradle\" }}"
      - run: "chmod u+x gradlew"
      - run: "./gradlew clean build"
      - run: "./gradlew -b build-11.gradle --build-cache assemble"
      - run: "./gradlew -q getVersion > build/libs/version.txt"
      - save_cache:
          key: "v1-gradle-wrapper-{{ checksum \"gradle/wrapper/gradle-wrapper.properties\" }}"
          paths:
            - ~/.gradle/wrapper
      - save_cache:
          key: "v1-gradle-cache-{{ checksum \"build.gradle\" }}"
          paths:
            - ~/.gradle/caches
      - store_artifacts:
          path: build/libs
      - persist_to_workspace:
          paths:
            - build/libs/*
            - Dockerfile
            - Dockerfile-11
          root: "."
      - run:
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          name: "Save test results"
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  test:
    docker:
      - image: "circleci/openjdk:8-jdk"
    steps:
      - run: "./test.gradle IntegrationTest"
      - run: "./test.gradle unitTest"


  docker-push:
    docker:
      - image: docker:18.06.3-ce-git
        environment:
          DOCKER_REPO: docker.io/checkmarxts/cxflow
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: .
      - deploy:
          name: Publish application to docker hub
          command: |
            VERSION=$(cat ./build/libs/version.txt)
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} docker.io
            docker build --target java8 \
             -t ${DOCKER_REPO}:${VERSION}-8 \
             -t ${DOCKER_REPO}:${VERSION} \
             -t ${DOCKER_REPO} \
             .
            docker build --target java11 \
             -t ${DOCKER_REPO}:${VERSION}-11 \
             .
            docker push ${DOCKER_REPO}

  publish-github-release:
    docker:
      - image: circleci/golang:1.9
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$(cat ./build/libs/version.txt)
            rm ./build/libs/version.txt
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -n ${VERSION} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./build/libs/


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test
#workflows:
#  version: 2
#  build_deploy:
#    context: tal_tests_context
#    jobs:
#      run_Test:
#        Integration_Test:
            ##          - run: "./gradlew IntegrationTest"
            ##        unitTest:
            ##          - run: "./gradlew unitTest"
              # This workflow is run on master changes merged to this repo
      # This workflow is run on master changes merged to this repo
#  workflows:
#    version: 2
#    build_and_test:
#      jobs:
#        - build
#        - test
  # - docker-push:
#          filters:
#            branches:
#              only:  tal_tests
##          requires:
#            - build
#      - publish-github-release:
#          filters:
#            branches:
#              only: tal_tests
#          requires:
#            - build
#run_IntegrationTest:
#  version: 2
